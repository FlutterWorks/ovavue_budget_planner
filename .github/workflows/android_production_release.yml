name: (Internal) Android Production Release

on:
  repository_dispatch:
    types: [ deploy ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

env:
  working_directory: android
  java_version: "17.x"
  java_distribution: "zulu"
  ruby_version: "3.3.4"

jobs:
  deploy_android:
    name: Deploy to Play Store
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.ruby_version }}
          working-directory: ${{ env.working_directory }}
          bundler-cache: true
      - uses: actions/setup-java@v4
        with:
          java-version: ${{ env.java_version }}
          distribution: ${{ env.java_distribution }}
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Initialize environment variables from FVM config
        uses: kuhnroyal/flutter-fvm-config-action@v2
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Install tools
        run: ./tool/install.sh

      # Decrypt secrets
      - name: Decrypt secrets
        run: ./tool/decrypt_android_secrets.sh
        env:
          ANDROID_KEYS_SECRET_PASSPHRASE: ${{ secrets.ANDROID_KEYS_SECRET_PASSPHRASE }}

      # Flutter actions
      - run: flutter doctor
      - run: flutter pub get
      - run: flutter packages pub run build_runner build
      - run: flutter build appbundle --flavor prod --dart-define=env.mode=prod

      # Fastlane deploy
      - name: Deploy Android Beta to Play Store via Fastlane
        uses: maierj/fastlane-action@v3.1.0
        with:
          lane: beta
          subdirectory: ${{ env.working_directory }}

      # Clean up unnecessary gradle cache
      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
