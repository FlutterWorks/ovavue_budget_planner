plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

ext.minimumSdkVersion = 21

android {
    namespace = "io.github.jogboms.ovavue"
    compileSdk 34
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "io.github.jogboms.ovavue"
        minSdkVersion = project.ext.minimumSdkVersion
        targetSdkVersion = 33
        versionCode = generateVersionCode(flutterVersionName, project.ext.minimumSdkVersion) + flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    flavorDimensions "flavor-type"

    productFlavors {
        dev {
            dimension "flavor-type"
            resValue "string", "app_name", "Dev"
            applicationIdSuffix ".development"
            versionNameSuffix "-dev"
        }
        mock {
            dimension "flavor-type"
            resValue "string", "app_name", "Mock"
            applicationIdSuffix ".mocking"
            versionNameSuffix "-mock"
        }
        prod {
            dimension "flavor-type"
            resValue "string", "app_name", "Ovavue"
        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig keystoreProperties.isEmpty() ? signingConfigs.debug : signingConfigs.release
        }
    }
}

flutter {
    source = "../.."
}

private static Integer generateVersionCode(String versionName, Integer minimumSdkVersion) {
    def (major, minor, patch) = versionName.split('\\.').collect { it.toInteger() }
    return minimumSdkVersion * 10000000 + major * 100000 + minor * 1000 + patch * 10
}
